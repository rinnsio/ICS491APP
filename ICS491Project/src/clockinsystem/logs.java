/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vinson
 */
public class logs extends javax.swing.JDialog {

    /**
     * Creates new form logs
     */
    // an array that store logs records from database 
    private ArrayList<Object> dataObjectForSubTable;
    
    public logs(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dataObjectForSubTable = new ArrayList<Object>();
        getAllLogsIntoJTable();
    }
    // initial jtable
    public void getAllLogsIntoJTable(){
          //fill fade data before database implement
          ArrayList<Object> temp= new ArrayList<Object>();; 
          Object[] subTableNumberRow = new Object[]{"data","in time","out time"};
          
          temp.add(subTableNumberRow);
          temp.add(subTableNumberRow);
          temp.add(subTableNumberRow);
          temp.add(subTableNumberRow);
          temp.add(subTableNumberRow);
            
          this.addSubTableRowsToDataObject(temp);       
          Collections.reverse(dataObjectForSubTable);
          Object[][] finalData = dataObjectForSubTable.toArray(new Object[dataObjectForSubTable.size()][]);
          this.buildJtableAfterMapData(finalData);
          System.out.printf("updateJTable button pressed");
    }
    
    // reformat and validate the data from database
    public void addSubTableRowsToDataObject(ArrayList<Object> temp){
            SimpleDateFormat dateFormater = new SimpleDateFormat("yyyy / MM / dd    E");
             
            for(int i=0;i<temp.size(); i++){
                temp.get(i);
                Object[] o = (Object[])temp.get(i);
                String t1 = o[0].toString();
                String t2 = o[1].toString();
                String t3 = o[2].toString();

                // catch exception for formating the database raw data 
//                try{
//                    t1=o[0].toString();
//                }catch(NullPointerException e){}
//                 try{
//                    Date date = new Date();
//                    date=(Date)o[1];
//                    t2=dateFormater.format(date);
//                }catch(NullPointerException e){}
//                  try{
//                    Date date = new Date();
//                    date=(Date)o[2];
//                    t3=dateFormater.format(date);
//                }catch(NullPointerException e){}
 
                
                Object[] s = new Object[]{t1, t2, t3};
                dataObjectForSubTable.add(s);
            }
    }
    
    // build jtable object after reformat the data
    public void buildJtableAfterMapData(Object[][] data) {
        DefaultTableModel model;
        final ColorTable colorTable;
        
        model = new DefaultTableModel(data,
                new Object[]{"ID", "Time in", "Time out"});
        colorTable = new ColorTable(model);
        colorTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        colorTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        colorTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        colorTable.setRowHeight(30);

        colorTable.getTableHeader().setReorderingAllowed(false);
        colorTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        colorTable.setFillsViewportHeight(true);
        jScrollPane1.getViewport().add(colorTable);  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
